//file:noinspection all

plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.9.+"
}

version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = 'Terraformers'
        url  = 'https://maven.terraformersmc.com/releases/'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraft_version"
    mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"
    modImplementation "net.fabricmc:fabric-loader:$loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
    modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version"

    modImplementation "com.terraformersmc:modmenu:$mod_menu_version"
}

loom {
    splitEnvironmentSourceSets()

    mods {
        mod_id {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")

    runs {
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=$mod_id"

            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/generated/resources'
            ]
        }
    }
}

processResources {
    inputs.property "version", version

    filesMatching("fabric.mod.json") {
        expand "version": version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = 17
    }
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from ("LICENSE", "LICENSE_ASSETS")
    exclude (".cache")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
    }
}
